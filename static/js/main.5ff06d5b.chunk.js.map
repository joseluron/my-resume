{"version":3,"sources":["assets/img/locationIcon.svg","assets/img/githubIcon.svg","assets/img/linkdinIcon.svg","components/Header/Header.js","components/LeftSideColumn/LeftSideColumn.js","components/Body/Body.js","pages/CurriculumCanvas/CurriculumCanvas.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","LeftSideColumn","linksData","icon","githubIcon","alt","domain","link","href","linkdinIcon","renderDotValue","value","valueToRender","i","push","renderDotDummy","dummyToRender","category","information","map","infoBlock","linkBlock","src","target","skill","language","Body","title","date","ubication","tasks","job","locationIcon","task","education","course","CurriculumCanvas","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ff06d5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/locationIcon.8fdf734a.svg\";","module.exports = __webpack_public_path__ + \"static/media/githubIcon.058a5b6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkdinIcon.4d349cc1.svg\";","import React from 'react';\r\n\r\nimport './Header.scss';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header-container\">\r\n            <div className=\"header-wrapper\">\r\n                <span className=\"header-name\">José Luis Coalla Cencerrado</span>\r\n                <span className=\"header-sub\">Full-Stack Developer</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport githubIcon from '../../assets/img/githubIcon.svg';\r\nimport linkdinIcon from '../../assets/img/linkdinIcon.svg';\r\n\r\nimport './LeftSideColumn.scss';\r\n\r\nfunction LeftSideColumn() {\r\n    const infoData = [\r\n        {\r\n            category: \"Phone\",\r\n            information: 687189968\r\n        },\r\n        {\r\n            category: \"Email\",\r\n            information: \"joseluis.coallac@gmail.com\"\r\n        }\r\n    ];\r\n    const linksData = [\r\n        {\r\n            icon: githubIcon,\r\n            alt: \"github\",\r\n            domain: \"Github\",\r\n            link: \"github.com/joseluron\",\r\n            href: \"https://github.com/joseluron\"\r\n        },\r\n        {\r\n            icon: linkdinIcon,\r\n            alt: \"linkdin\",\r\n            domain: \"Linkdin\",\r\n            link: \"linkedin.com/in/josé-luis-coalla-cencerrado-797447138\",\r\n            href: \"https://www.linkedin.com/in/jos%C3%A9-luis-coalla-cencerrado-797447138/\"\r\n        }\r\n    ];\r\n    const skillsData = [\r\n        {\r\n            skill: \"Angular 2+\",\r\n            value: 5\r\n        }, \r\n        {\r\n            skill: \"Ionic\",\r\n            value: 5\r\n        },\r\n        {\r\n            skill: \"ReactJS\",\r\n            value: 5\r\n        },\r\n        {\r\n            skill: \"NodeJS\",\r\n            value: 4\r\n        },\r\n        {\r\n            skill: \"Git\",\r\n            value: 4\r\n        },\r\n        {\r\n            skill: \"REST\",\r\n            value: 3\r\n        }\r\n    ];\r\n    const languagesData = [\r\n        {\r\n            language: \"Spanish\",\r\n            value: 5\r\n        },\r\n        {\r\n            language: \"English\",\r\n            value: 4\r\n        }\r\n    ];\r\n\r\n    const renderDotValue = value => {\r\n        const valueToRender = [];\r\n        for (let i = 1; i <= value; i++) {\r\n            valueToRender.push(<div className=\"value\" />);\r\n        }\r\n\r\n        return valueToRender;\r\n    }\r\n\r\n    const renderDotDummy = value => {\r\n        const dummyToRender = [];\r\n        for (let i = 1; i <= value; i++) {\r\n            dummyToRender.push(<div className=\"dummy-value\" />);\r\n        }\r\n\r\n        return dummyToRender;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"left-side-column-container\">\r\n            <div className=\"left-side-column-wrapper\">\r\n                <div className=\"info-wrapper\">\r\n                    <span className=\"header\">Info</span>\r\n                    {infoData.map(infoBlock => {\r\n                        return (\r\n                            <div className=\"category-block\">\r\n                                <span className=\"category\">{infoBlock.category}</span>\r\n                                <span className=\"information\">{infoBlock.information}</span>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"links-wrapper\">\r\n                    <span className=\"header\">Links</span>\r\n                    {linksData.map(linkBlock => {\r\n                        return (\r\n                            <div className=\"link-block\">\r\n                                <div className=\"icon-wrapper\">\r\n                                    <img src={linkBlock.icon} className=\"icon\" alt={linkBlock.alt} />\r\n                                    <span className=\"domain\">{linkBlock.domain}</span>\r\n                                </div>\r\n                                <a className=\"link\" href={linkBlock.href} target=\"_blank\">{linkBlock.link}</a>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"skills-wrapper\">\r\n                    <span className=\"header\">Skills</span>\r\n                    {skillsData.map(skill => {\r\n                        return (\r\n                            <div className=\"skill-block\">\r\n                                <span className=\"skill\">{skill.skill}</span>\r\n                                <div className=\"value-wrapper\">\r\n                                    {renderDotValue(skill.value)}\r\n                                    {renderDotDummy(5 - skill.value)}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"languages-wrapper\">\r\n                    <span className=\"header\">Languages</span>\r\n                    {languagesData.map(language => {\r\n                        return (\r\n                            <div className=\"language-block\">\r\n                                <span className=\"language\">{language.language}</span>\r\n                                <div className=\"value-wrapper\">\r\n                                    {renderDotValue(language.value)}\r\n                                    {renderDotDummy(5 - language.value)}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"hobbies-wrapper\">\r\n                    <span className=\"header\">Hobbies</span>\r\n                    <span className=\"hobbies\">Going to the movies, gym, going out, eating, listening to music, traveling, hiking, learning</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftSideColumn;\r\n","import React from 'react';\r\n\r\nimport locationIcon from '../../assets/img/locationIcon.svg';\r\n\r\nimport './Body.scss';\r\n\r\nfunction Body() {\r\n    const employmentData = [\r\n        {\r\n            title: \"Full-Stack Web Developer, Tribalyte Technologies\",\r\n            date: \"Jan 2018 - Present\",\r\n            ubication: \"Madrid, Spain\",\r\n            tasks: [\r\n                \"Development and maintenance of different web apps with Angular and ReactJS\",\r\n                \"Development and maintenance of different hybrid apps with Ionic\",\r\n                \"Design and implementation of RESTful apis with MEAN technologies and Firebase\",\r\n                \"Tasks and projects estimations\"\r\n            ]\r\n        },\r\n        {\r\n            title: \"Frontend Web Developer, tiko Energy Solutions AG\",\r\n            date: \"Feb 2019 - Apr 2019\",\r\n            ubication: \"Zurich, Switzerland\",\r\n            tasks: [\r\n                \"Development of the Tiko virtual power plant web app with ReactJS\"\r\n            ]\r\n        },\r\n        {\r\n            title: \"Junior Developer, Totemcat\",\r\n            date: \"Oct 2016 - Apr 2017\",\r\n            ubication: \"Madrid, Spain\",\r\n            tasks: [\r\n                \"Development of different web apps\"\r\n            ]\r\n        }\r\n    ];\r\n    const educationData = [\r\n        {\r\n            title: \"Software Engineering, Universidad Politécnica de Madrid\",\r\n            date: \"Sep 2010 - May 2018\",\r\n            ubication: \"Madrid, Spain\",\r\n        }\r\n    ];\r\n    const coursesData = [\r\n        {\r\n            title: \"NgRx Essentials, NgSpain\",\r\n            date: \"Nov 2019\"\r\n        },\r\n        {\r\n            title: \"Introducción al desarrollo web con Angular, Cursos Tech Institute Samsung-UPM\",\r\n            date: \"Oct 2017\"\r\n        }        \r\n    ]\r\n    \r\n    return (\r\n        <div className=\"body-container\">\r\n            <div className=\"body-wrapper\">\r\n                <div className=\"profile-wrapper\">\r\n                    <span className=\"header\">Profile</span>\r\n                    <span className=\"information\">Passionate web developer who loves learning new things every day and brings a devotion to helping others in the team. I have experience in estimating tasks and don't mind taking a leadership role if needed. I follow good code practices and I love implementing good looking designs.</span>\r\n                </div>\r\n                <div className=\"employment-wrapper\">\r\n                    <span className=\"header\">Employment History</span>\r\n                    {employmentData.map(job => {\r\n                        return (\r\n                            <div className=\"job-block\">\r\n                                <span className=\"title\">{job.title}</span>\r\n                                <div className=\"localization-block\">\r\n                                    <span className=\"date\">{job.date}</span>\r\n                                    <div className=\"ubication-wrapper\">\r\n                                        <img src={locationIcon} className=\"icon\" alt=\"location\" />\r\n                                        <span className=\"ubication\">{job.ubication}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <ul className=\"tasks-block\">\r\n                                    {job.tasks.map(task => {\r\n                                        return (\r\n                                            <li className=\"task\">{task}</li>\r\n                                        );\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"education-wrapper\">\r\n                    <span className=\"header\">Education</span>\r\n                    {educationData.map(education => {\r\n                        return (\r\n                            <div className=\"education-block\">\r\n                                <span className=\"title\">{education.title}</span>\r\n                                <div className=\"localization-block\">\r\n                                    <span className=\"date\">{education.date}</span>\r\n                                    <div className=\"ubication-wrapper\">\r\n                                        <img src={locationIcon} className=\"icon\" alt=\"location\" />\r\n                                        <span className=\"ubication\">{education.ubication}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"courses-wrapper\">\r\n                    <span className=\"header\">Courses</span>\r\n                    {coursesData.map(course => {\r\n                        return (\r\n                            <div className=\"course-block\">\r\n                                <span className=\"title\">{course.title}</span>\r\n                                <span className=\"date\">{course.date}</span>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;\r\n","import React from 'react';\r\n\r\nimport Header from '../../components/Header/Header';\r\nimport LeftSideColumn from '../../components/LeftSideColumn/LeftSideColumn';\r\nimport Body from '../../components/Body/Body';\r\n\r\nimport './CurriculumCanvas.scss';\r\n\r\nfunction CurriculumCanvas() {\r\n    return (\r\n        <div className=\"curriculum-canvas-wrapper\">\r\n            <div className=\"header-wrapper\">\r\n                <Header/>\r\n            </div>\r\n            <div className=\"body-wrapper\">\r\n                <LeftSideColumn/>\r\n                <Body/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurriculumCanvas;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport CurriculumCanvas from './pages/CurriculumCanvas/CurriculumCanvas';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <CurriculumCanvas/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}